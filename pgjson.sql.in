SET client_min_messages TO warning;
BEGIN;
DROP TYPE IF EXISTS json CASCADE;
CREATE TYPE json;

-- In/out functions for json datatype
CREATE OR REPLACE FUNCTION json_in(cstring)
   RETURNS json
   AS 'MODULE_PATHNAME', 'pgjson_json_in'
   LANGUAGE 'C' IMMUTABLE STRICT;
CREATE OR REPLACE FUNCTION json_out(json)
   RETURNS cstring
   AS 'MODULE_PATHNAME', 'pgjson_json_out'
   LANGUAGE 'C' IMMUTABLE STRICT;
CREATE OR REPLACE FUNCTION json_recv(internal)
   RETURNS json
   AS 'MODULE_PATHNAME', 'pgjson_json_recv'
   LANGUAGE 'C' IMMUTABLE STRICT;
CREATE OR REPLACE FUNCTION json_send(json)
   RETURNS bytea
   AS 'MODULE_PATHNAME', 'pgjson_json_send'
   LANGUAGE 'C' IMMUTABLE STRICT;

CREATE TYPE json (
   internallength = variable,
   alignment = int4,
   storage = main,
   input = json_in,
   output = json_out,
   send = json_send,
   receive = json_recv
);

/** json support functions **/
CREATE OR REPLACE FUNCTION JsonAsBinary(json)
   RETURNS bytea
   AS 'MODULE_PATHNAME', 'pgjson_json_as_binary'
   LANGUAGE 'C' IMMUTABLE STRICT;

COMMIT;



